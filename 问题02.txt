
↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 已解答 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
、“如果数字证书记载的网址，与你正在浏览的网址不一致，就说明这张证书可能被冒用，浏览器会发出警告。”
	、文字出处：《数字签名是什么？》http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html，第18段：
	、首先得解密数字证书，才能知道数字证书记载的网址吧？
		、这个说法不准确，解密的应该数字证书内含的签名。
		、诸如“所有者”、“发布者”等信息，不用解密什么就能一目了然。
	、我咋看不到证书记载了网址？
		、有的，如
		“
		别名: ao-men-zheng-wu
		创建日期: 2020-11-10
		条目类型: trustedCertEntry

		所有者: CN=uataccount.gov.mo
		发布者: CN=uataccount.gov.mo
		......
		”
	、我把问题描述清楚些：浏览器如何判断，数字证书记载的网址，与正在浏览的网址不一致？
	------------------------------
	、直接将“数字证书记载的网址”和“正在浏览的网址”一对比就知道是否一致了，两者唾手可得。
、加密网页和数字证书一起发送给用户
	、文字出处：《数字签名是什么？》http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html，第16段：
		“服务器用自己的私钥加密网页以后，连同本身的数字证书，一起发送给客户端。”
	、我认为，阮一峰此处描述得不严谨————当然了，也没有必要太严谨，毕竟他只是带领小白入门。
	、准确来说，服务器先把数字证书发送给用户，然后是加密网页。
	、流程如下：
		、客户端请求某网站，网站服务器返回含有本站公钥的证书，私钥留着
		、客户端解开证书，得到公钥
			、如果证书有问题则告警
		、客户端生成一个密钥，用公钥加密该密钥，并发送给服务器
		、服务器收到密钥后，用私钥解密，得到密钥明文
		、服务器用这个来自客户端的密钥加密响应
		、客户端收到响应后，用自己生成的密钥，解密响应，获得响应明文
	、参考《RSA初探，聊聊怎么破解HTTPS》https://www.cnblogs.com/dennisj/p/12463168.html 之“HTTPS握手流程”
		“
		小明向网站A发起请求
		网站A将CA数字证书返回给客户端，证书里面有网站A的公钥
		小明通过自己电脑内置的CA公钥解密证书，拿到网站A的公钥（CA公钥内置在浏览器中）
		小明生成随机的对称秘钥，也就是会话秘钥。会话秘钥一定要客户端生成，因为前面说了，这里公私钥只能保证客户端发给网站信息的安全，公钥加密的信息只有私钥才能解开，私钥网站藏起来了，所以其他人拿到信息也解不开。但是如果网站生成会话秘钥，用他的私钥加密，那所有人都有公钥，所有人都能解开了。
		小明将会话秘钥通过网站A的公钥加密，发送给网站A
		接下来网站A和小明使用会话秘钥进行HTTP通信
		”
	、参考《Https原理及流程》https://www.jianshu.com/p/14cd2c9d2cd2 之“HTTPS通信过程”
	、猜测：如果网站证书有问题，但客户端坚持继续访问，会有以下情况
		、由于证书不过关，没有公钥用于加密。
		、所以客户端不生成密钥了。
		、客户端没有密钥可发送网站服务器。
		、服务器没有收到客户端的密钥，响应直接明文返回。
、“查看解开数字证书的公钥是否在列表之内”
	、如果不在，怎么解开？
	------------------------------
	、引用文字出处：《数字签名是什么？》http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html，第17段：
		、客户端（浏览器）的"证书管理器"，有"受信任的根证书颁发机构"列表。客户端会根据这张列表，查看解开数字证书的公钥是否在列表之内。
	、根证书，位于证书链的最顶端。证书链的每一级证书，都有解开下一级证书的公钥。所以，只要拥有了根证书，就能顺着证书链一级一级地往下解开所有证书。那如何解开根证书？根证书不用谁来解开，因为它是自签证书。
	、如果"受信任的根证书颁发机构"列表中不存在需要的根证书，那只有从外部导入了，就像澳门政务的证书（uataccount.gov.mo）。
		、不过，随便导入证书，相当危险，此举不提倡。
		、又不存在，又不导入，但还是可以硬着头皮访问的。Chrome 访问此类网站时，地址栏左端会有个“不安全”的提示。
、有证书后，公钥就只是从证书里面取就是了？不需要向 Bob 索取了？
	、本来是向 Bob 索取的吗？
	------------------------------
	、是的，本来是向 Bob 索取的，但由于可能存在中间人攻击，无法确定获得的公钥是否来自 Bob，即有可能获得的是中间人调包公钥。
	、是，有证书后，公钥就只是从 Bob 颁发的证书里面取就是了，以前获取公钥的方式已被抛弃了。
、用 CA 的公钥解开数字证书————CA 的公钥哪里来？
		、或许可以先不管此物的来源
	------------------------------
	、“如果你问：CA的公钥哪里来呢？从CA的权威网站上获取”
	、“CA是公钥系统得以可靠安全运行的重要保障”
		、https://blog.csdn.net/aiwo1376301646/article/details/104864769《认证中心 CA 公钥认证中心 P113》
	------------------------------
	、CA 公钥来自当前网站证书的上一级证书，也就是 CA 证书。解开 CA 证书的公钥则来自其上一级 CA 证书，解开其上一级 CA 证书的公钥则来自其上上一级 CA 证书......以此类推，直到最顶级证书“根证书”为止。根证书一般是预安装在系统内的，它包括解开下一级证书的公钥等其他内容，以及用自己的私钥对这些内容的签名，所以又称“自签证书”。
		、证书链
	、用 Chrome 访问安全的 https 网站时，地址栏的左端有个锁状图标（访问不安全网站时则是其他图标或提示）。点击这个图标，在随后弹出的方块中点击“证书”以打开一个窗口。选择这个窗口的“证书路径”选项卡，就可以看到证书链了，如 CSDN 的：
		、DigiCert
			、GeoTrust CN RSA CA G1
				、*.csdn.net
	、上述的“解开证书”，准确来说，应该是“解开证书中的签名”。
		、证书中的签名，就是上级 CA 的私钥对该证书内容的加密结果。